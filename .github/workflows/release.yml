name: Release

on:
    push:
        tags:
            - "*"

env:
    BROWSER_EXTENSION_NAME: snippet-leaf-browser
    CODEMIRROR_EXTENSION_NAME: snippet-leaf-codemirror

jobs:
    detect-release-type:
        runs-on: ubuntu-latest
        outputs:
            release_type: ${{ steps.detect.outputs.release_type }}
            tag_name: ${{ steps.detect.outputs.tag_name }}
        steps:
            - name: Detect release type
              id: detect
              run: |
                  TAG_NAME=${GITHUB_REF#refs/tags/}
                  echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
                  if [[ "$TAG_NAME" == *-browser ]]; then
                      echo "release_type=browser" >> $GITHUB_OUTPUT
                  elif [[ "$TAG_NAME" == *-codemirror ]]; then
                      echo "release_type=codemirror" >> $GITHUB_OUTPUT
                  else
                      echo "release_type=unknown" >> $GITHUB_OUTPUT
                  fi

    build-browser-extension:
        runs-on: ubuntu-latest
        needs: detect-release-type
        if: needs.detect-release-type.outputs.release_type == 'browser'
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18

            - name: Build Browser Extension
              id: build
              run: |
                  npm install
                  npm run build

                  # Create browser extension package
                  mkdir -p ${{ env.BROWSER_EXTENSION_NAME }}
                  cd browser_extension
                  cp -r dist/ manifest.json popup.html popup.js settings.html styles.css ../${{ env.BROWSER_EXTENSION_NAME }}/
                  cd ..
                  zip -r ${{ env.BROWSER_EXTENSION_NAME }}.zip ${{ env.BROWSER_EXTENSION_NAME }}
                  echo "tag_name=${{ needs.detect-release-type.outputs.tag_name }}" >> $GITHUB_OUTPUT

            - name: Create Browser Extension Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ needs.detect-release-type.outputs.tag_name }}
                  release_name: Browser Extension ${{ needs.detect-release-type.outputs.tag_name }}
                  draft: false
                  prerelease: false

            - name: Upload browser extension zip
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./${{ env.BROWSER_EXTENSION_NAME }}.zip
                  asset_name: ${{ env.BROWSER_EXTENSION_NAME }}-${{ steps.build.outputs.tag_name }}.zip
                  asset_content_type: application/zip

    build-codemirror-extension:
        runs-on: ubuntu-latest
        needs: detect-release-type
        if: needs.detect-release-type.outputs.release_type == 'codemirror'
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18

            - name: Build CodeMirror Extension
              id: build
              run: |
                  npm install
                  npm run build:rollup

                  # Create codemirror extension package
                  mkdir -p ${{ env.CODEMIRROR_EXTENSION_NAME }}
                  cp -r dist/ package.json README.md LICENSE.md ${{ env.CODEMIRROR_EXTENSION_NAME }}/
                  zip -r ${{ env.CODEMIRROR_EXTENSION_NAME }}.zip ${{ env.CODEMIRROR_EXTENSION_NAME }}
                  echo "tag_name=${{ needs.detect-release-type.outputs.tag_name }}" >> $GITHUB_OUTPUT

            - name: Create CodeMirror Extension Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ needs.detect-release-type.outputs.tag_name }}
                  release_name: CodeMirror Extension ${{ needs.detect-release-type.outputs.tag_name }}
                  draft: false
                  prerelease: false

            - name: Upload codemirror extension zip
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./${{ env.CODEMIRROR_EXTENSION_NAME }}.zip
                  asset_name: ${{ env.CODEMIRROR_EXTENSION_NAME }}-${{ steps.build.outputs.tag_name }}.zip
                  asset_content_type: application/zip

            - name: Upload main dist files
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/index.js
                  asset_name: index.js
                  asset_content_type: text/javascript

            - name: Upload TypeScript definitions
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/index.d.ts
                  asset_name: index.d.ts
                  asset_content_type: text/plain
